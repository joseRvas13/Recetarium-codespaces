# Generated by Django 5.0.6 on 2024-06-26 04:36

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('Recetarium', '0002_consejero_receta_delete_userprofile'),
        ('auth', '0012_alter_user_first_name_max_length'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Licencia',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=255)),
                ('precio', models.IntegerField()),
                ('descripcion', models.CharField(max_length=255)),
                ('vigencia', models.DateField()),
                ('fecha_inicio', models.DateField()),
                ('fecha_fin', models.DateField()),
                ('imagen', models.CharField(max_length=255)),
            ],
            options={
                'db_table': 'tbl_licencias',
            },
        ),
        migrations.CreateModel(
            name='Rol',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=50)),
                ('descripcion', models.CharField(max_length=255)),
                ('permisos', models.CharField(max_length=255)),
            ],
            options={
                'db_table': 'tbl_roles',
            },
        ),
        migrations.AddField(
            model_name='consejero',
            name='descripcion',
            field=models.CharField(default='exit', max_length=255),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='consejero',
            name='fecha_registro',
            field=models.DateTimeField(default='2024-06-27'),
        ),
        migrations.AddField(
            model_name='consejero',
            name='imagen',
            field=models.ImageField(default='exit', upload_to='consejeros/'),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='receta',
            name='fecha_registro_receta',
            field=models.DateTimeField(auto_now_add=True, default='exit'),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='receta',
            name='instrucciones',
            field=models.CharField(default='exit', max_length=255),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='receta',
            name='origen',
            field=models.CharField(default='exit', max_length=255),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='receta',
            name='temporada',
            field=models.CharField(default='exit', max_length=255),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='receta',
            name='usuario',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='recetas', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AlterField(
            model_name='consejero',
            name='fecha_nacimiento',
            field=models.DateField(),
        ),
        migrations.AlterField(
            model_name='receta',
            name='imagen',
            field=models.ImageField(upload_to='recetas/'),
        ),
        migrations.CreateModel(
            name='Dieta',
            fields=[
                ('id_dieta_c', models.AutoField(primary_key=True, serialize=False)),
                ('imagen', models.ImageField(upload_to='dietas/')),
                ('nombre', models.CharField(max_length=255)),
                ('descripcion', models.CharField(max_length=1000)),
                ('objetivo', models.CharField(max_length=255)),
                ('calorias', models.IntegerField()),
                ('condicion_medica', models.CharField(max_length=255)),
                ('valor_nutricional', models.IntegerField()),
                ('actividad_fisica', models.CharField(max_length=255)),
                ('consejos', models.CharField(max_length=255)),
                ('dispositivos', models.CharField(max_length=255)),
                ('bibliografia', models.CharField(max_length=255)),
                ('fecha_registro_dieta', models.DateTimeField(auto_now_add=True)),
                ('dia_semana', models.CharField(blank=True, max_length=20, null=True)),
                ('desayuno', models.CharField(blank=True, max_length=255, null=True)),
                ('media_manana', models.CharField(blank=True, max_length=255, null=True)),
                ('almuerzo', models.CharField(blank=True, max_length=255, null=True)),
                ('merienda', models.CharField(blank=True, max_length=255, null=True)),
                ('cena', models.CharField(blank=True, max_length=255, null=True)),
                ('consejero', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='Recetarium.consejero')),
                ('usuario', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='dietas', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'tbl_dieta_calendario',
            },
        ),
        migrations.CreateModel(
            name='Ingrediente',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=255)),
                ('descripcion', models.CharField(blank=True, max_length=255, null=True)),
                ('cantidad', models.IntegerField()),
                ('variedad', models.CharField(blank=True, max_length=255, null=True)),
                ('usos', models.CharField(blank=True, max_length=255, null=True)),
                ('p_nutricional', models.CharField(blank=True, max_length=255, null=True)),
                ('consejos', models.CharField(blank=True, max_length=255, null=True)),
                ('grasas_saturadas', models.IntegerField(blank=True, null=True)),
                ('calorias', models.IntegerField(blank=True, null=True)),
                ('hidratos_de_carbono', models.IntegerField(blank=True, null=True)),
                ('grasas_trans', models.IntegerField(blank=True, null=True)),
                ('total_carbohidratos', models.IntegerField(blank=True, null=True)),
                ('azucares', models.IntegerField(blank=True, null=True)),
                ('precio', models.FloatField(blank=True, null=True)),
                ('receta', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ingredientes_receta', to='Recetarium.receta')),
            ],
            options={
                'db_table': 'tbl_ingredientes',
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('imagen', models.CharField(blank=True, max_length=255, null=True)),
                ('descripcion', models.CharField(blank=True, max_length=255, null=True)),
                ('pais', models.CharField(blank=True, max_length=255, null=True)),
                ('telefono', models.CharField(blank=True, max_length=255, null=True)),
                ('groups', models.ManyToManyField(blank=True, related_name='custom_user_set', to='auth.group')),
                ('licencia', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='usuarios', to='Recetarium.licencia')),
                ('user_permissions', models.ManyToManyField(blank=True, related_name='custom_user_set_permissions', to='auth.permission')),
            ],
            options={
                'db_table': 'custom_auth_user',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
    ]
